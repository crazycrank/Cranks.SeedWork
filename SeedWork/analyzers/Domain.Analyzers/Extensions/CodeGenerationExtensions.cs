using System.Collections.Immutable;
using System.Text;

namespace Cranks.SeedWork.Domain.Analyzers.Extensions;

internal static class CodeGenerationExtensions
{
    public static StringBuilder AppendFileHeader(this StringBuilder code)
    {
        return code.AppendLine("// <auto-generated />")
                   .AppendLine("#nullable enable")
                   .AppendLine();
    }

    public static StringBuilder AppendUsings(this StringBuilder code, params string[] namespaces)
    {
        var defaultUsings = new[]
                            {
                                "System",
                                "System.Collections.Generic",
                                "System.Collections.Immutable",
                                "System.Linq",
                            };

        foreach (var ns in defaultUsings.Concat(namespaces).ToImmutableSortedSet())
        {
            code.AppendLine($"using {ns};");
        }

        return code.AppendLine();
    }

    public static StringBuilder AppendNamespace(this StringBuilder code, bool isGlobalNamespace, string? ns)
    {
        return isGlobalNamespace
                   ? code
                   : code.AppendLine($"namespace {ns};")
                         .AppendLine();
    }
}

using Verify = Cranks.SeedWork.Domain.Generator.Tests.Verifiers.CSharpSourceGeneratorVerifier<
    Cranks.SeedWork.Domain.Generator.ValueObjectAnalyzers.ValueObjectSourceGenerator>;

namespace Cranks.SeedWork.Domain.Generator.Tests.ValueObjectAnalyzers;

public class ValueObjectGeneratorTest
{
    [Fact]
    public async Task UnaryValueObject_GeneratesCorrectCode()
    {
        var test = @"
using Cranks.SeedWork.Domain.Attributes;

[ValueObject]
public partial record TestValueObject(int Value);
";

        var expected = @"// <auto-generated />

partial record TestValueObject
    : Cranks.SeedWork.Domain.ValueObject<TestValueObject>
{
    // TODO implement unary extensions

    public static explicit operator TestValueObject(int value)
    {
        return new(value);
    }
    public static explicit operator int(TestValueObject value)
    {
        return value.Value;
    }
}
";

        await Verify.VerifyGeneratorAsync(test, expected, "TestProject.TestValueObject.g.cs");
    }

    [Fact]
    public async Task NonUnaryValueObject_GeneratesCorrectCode()
    {
        var test = @"
using Cranks.SeedWork.Domain.Attributes;

[ValueObject]
public partial record TestValueObject(int Value, string Another);
";

        var expected = @"// <auto-generated />

partial record TestValueObject
    : Cranks.SeedWork.Domain.ValueObject<TestValueObject>
{
}
";

        await Verify.VerifyGeneratorAsync(test, expected, "TestProject.TestValueObject.g.cs");
    }

    [Fact]
    public async Task NonUnaryValueObject_HasBaseType_GeneratesCorrectCode()
    {
        var test = @"
using Cranks.SeedWork.Domain;
using Cranks.SeedWork.Domain.Attributes;

[ValueObject]
public partial record TestValueObject(int Value, string Another) : ValueObject<TestValueObject>;
";

        var expected = @"// <auto-generated />

partial record TestValueObject
{
}
";

        await Verify.VerifyGeneratorAsync(test, expected, "TestProject.TestValueObject.g.cs");
    }

    [Fact]
    public async Task WithNamespace_GeneratesCorrectCode()
    {
        var test = @"
using Cranks.SeedWork.Domain.Attributes;

namespace Test;

[ValueObject]
public partial record TestValueObject(int Value, string Another);
";

        var expected = @"// <auto-generated />

namespace Test;

partial record TestValueObject
    : Cranks.SeedWork.Domain.ValueObject<TestValueObject>
{
}
";

        await Verify.VerifyGeneratorAsync(test, expected, "TestProject.Test.TestValueObject.g.cs");
    }
}

<Project>
  <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

  <!-- extended project configuration -->
  <PropertyGroup>
    <EnableAOTAnalyzer>true</EnableAOTAnalyzer>
    <IsTrimmable>true</IsTrimmable>
  </PropertyGroup>

  <!-- Package Configuration -->
  <PropertyGroup>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSources>true</IncludeSources>
    <Authors>Max Obrist</Authors>
    <Product>Cranks.SeedWork</Product>
    <Company>Cranks</Company>
    <PackageTags>cranks seedwork ddd net</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IncludeSymbols>True</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Copyright>$([System.DateTime]::Today.Year)</Copyright>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/crazycrank/Cranks.SeedWork</PackageProjectUrl>
    <RepositoryUrl>https://github.com/crazycrank/Cranks.SeedWork</RepositoryUrl>
  </PropertyGroup>

  <!-- NOTE: From https://github.com/dotnet/runtime/blob/main/eng/packaging.targets -->
  <!-- NOTE: This target executes the GetAnalyzerPackFiles step of all ProjectReferences referenced with AnalyzerReference,
             and packs them, as well as the corresponding symbol files to the appropriate folder -->
  <!-- Call a target in the analyzer project to get all the files it would normally place in a package.
       These will be returned as items with identity pointing to the built file, and PackagePath metadata
       set to their location in the package. IsSymbol metadata will be set to distinguish symbols. -->
  <PropertyGroup>
    <BeforePack>$(BeforePack);IncludeAnalyzersInPackage</BeforePack>
  </PropertyGroup>

  <Target Name="IncludeAnalyzersInPackage"
          Condition="'@(AnalyzerReference)' != '' and @(AnalyzerReference->AnyHaveMetadataValue('Pack', 'true'))">
    <MSBuild Projects="@(AnalyzerReference->WithMetadataValue('Pack', 'true'))"
             Targets="GetAnalyzerPackFiles">
      <Output TaskParameter="TargetOutputs"
              ItemName="_AnalyzerFile" />
    </MSBuild>

    <ItemGroup>
      <Content Include="@(_AnalyzerFile)"
               Pack="True"
               Condition="!%(_AnalyzerFile.IsSymbol)" />
      <!-- Symbols don't honor PackagePath.  By default they are placed in lib/%(TargetFramework).
           Pack does honor TargetPath and does Path.Combine("lib/%(TargetFramework)", "%(TargetPath)"),
           so a rooted path value for TargetPath will override lib.
           https://github.com/NuGet/Home/issues/10860 -->
      <_TargetPathsToSymbols Include="@(_AnalyzerFile)"
                             TargetPath="/%(_AnalyzerFile.PackagePath)"
                             Condition="%(_AnalyzerFile.IsSymbol)" />
    </ItemGroup>
  </Target>
</Project>
